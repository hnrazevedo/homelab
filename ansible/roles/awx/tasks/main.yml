---
- name: Install packages
  ansible.builtin.dnf:
    name: 
      - make
      - ansible
    state: present

- name: Disable firewalld
  ansible.builtin.service:
    name: firewalld
    state: stopped
    enabled: false

- name: Define env
  ansible.builtin.command: "echo $PATH"
  environment:
    NAMESPACE: awx
    INSTALL_K3S_SKIP_SELINUX_RPM: "true"
    INSTALL_K3S_SELINUX_WARN: "true"
  ignore_errors: true

- name: Install K3S
  ansible.builtin.shell:
    cmd: "{{ item }}"
    executable: /bin/bash
  loop:
    - "wget https://get.k3s.io -O k3s.sh"
    - "bash k3s.sh"
    - "semanage fcontext -a -t bin_t \"/usr/local/bin/k3s\""
    - "restorecon -v /usr/local/bin/k3s"
    - "ln -sf /usr/local/bin/kubectl /usr/bin/kubectl"
    - "swapoff -a"
  ignore_errors: true

- name: Start K3S
  ansible.builtin.service:
    name: k3s
    state: started
    enabled: true

- name: Register Release AWX
  ansible.builtin.shell: 
    cmd: "curl -s https://api.github.com/repos/ansible/awx-operator/releases/latest | grep tag_name | cut -d '\"' -f 4"
    executable: /bin/bash
  register: awx_release_tag

- name: Git clone
  ansible.builtin.git:
    repo: 'https://github.com/ansible/awx-operator.git'
    dest: /root/awx-operator
    version: "{{ awx_release_tag.stdout }}"
    force: true

- name: Create and Config NS
  ansible.builtin.shell: 
    cmd: "{{ item }}"
    executable: /bin/bash
  loop:
    - "kubectl create ns awx"
    - "kubectl config set-context --current --namespace=awx"
  ignore_errors: true

- name: Run deploy target as root
  ansible.builtin.make:
    chdir: /root/awx-operator
    target: deploy

- name: Copy awx.yml
  ansible.builtin.copy:
    src: ../files/awx.yml
    dest: /root/awx-operator/awx.yml
    owner: root
    group: root
    mode: '0644'
    force: true

- name: Wait init deploy
  ansible.builtin.shell:
    cmd: "kubectl get pods -n awx | wc -l"
    executable: /bin/bash
  register: deploy_init
  until: deploy_init.stdout | int > 0
  retries: 30
  delay: 10

- name: Wait finish deploy
  ansible.builtin.shell:
    cmd: "kubectl get pods -n awx --field-selector=status.phase=Running -o jsonpath='{.items[*].status.containerStatuses[].ready}' | grep false | wc -l"
    executable: /bin/bash
  register: deploy_finish
  until: deploy_finish.stdout | int == 0
  retries: 30
  delay: 10

- name: Apply kubectl
  ansible.builtin.shell: 
    cmd: "kubectl apply -f /root/awx-operator/awx.yml"
    executable: /bin/bash

- name: Wait apply
  ansible.builtin.shell:
    cmd: "kubectl get pods -n awx -o jsonpath='{.items[*].status.containerStatuses[].name}' | grep 'migration-job' | grep 'awx-manager' | grep 'postgres' | grep 'awx-ee' | grep 'awx-rsyslog' | wc -l"
    executable: /bin/bash
  register: apply_finish
  until: apply_finish.stdout | int == 1
  delay: 30
  retries: 10

- name: Get task pod name
  ansible.builtin.shell: 
    cmd: "kubectl get pods | grep task | awk '{print $1}'"
    executable: /bin/bash
  register: taskpodname

- name: Wait containers
  ansible.builtin.shell:
    cmd: "kubectl get pod {{ taskpodname }} -n awx -o jsonpath='{.status.containerStatuses[*].ready}' | grep false | wc -l"
    executable: /bin/bash
  register: taskpod_finish
  until: taskpod_finish.stdout | int == 0
  retries: 30
  delay: 10

- name: Update default password
  ansible.builtin.shell: 
    cmd: "kubectl exec -ti {{ taskpodname.stdout }} -- awx-manage update_password --username=admin --password=\"{{ admin_password }}\""
    executable: /bin/bash
  retries: 30
  delay: 10